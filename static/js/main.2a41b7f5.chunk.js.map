{"version":3,"sources":["../../../../../robofriends/src/components/Card.js","../../../../../robofriends/src/components/CardList.js","../../../../../robofriends/src/components/SearchBox.js","../../../../../robofriends/src/components/Scroll.js","../../../../../robofriends/src/containers/App.js","../../../../../robofriends/src/index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"yNAceA,EAZF,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,GAC5B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BP,EAA1B,cACrBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIJ,MCcIS,EAnBE,SAAAX,GAAgB,IAAbY,EAAaZ,EAAbY,OACnB,OACER,EAAAC,EAAAC,cAAA,WAEIM,EAAOC,IAAI,SAACC,EAAMC,GACjB,OACGX,EAAAC,EAAAC,cAACU,EAAD,CACFC,IAAKF,EACLZ,GAAIS,EAAOG,GAAGZ,GACdF,KAAMW,EAAOG,GAAGd,KAChBC,MAAOU,EAAOG,GAAGb,YCEXgB,EAbG,SAAAlB,GAAmCA,EAAhCmB,YAAgC,IAAnBC,EAAmBpB,EAAnBoB,aAChC,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,mCACVc,KAAK,SACRC,YAAY,gBACZC,SAAUH,MCCAI,EARA,SAACC,GACd,OACCrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACnEJ,EAAMK,WCuCGC,qBArCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaDI,eAAiB,SAACC,GAAD,OAAWR,EAAKS,SAAS,CAAEtB,YAAaqB,EAAME,OAAOC,SAZrEX,EAAKY,MAAQ,CACXhC,OAAQ,GACVO,YAAa,IAJAa,mFAQM,IAAAa,EAAAV,KACnBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAE7B,OAAQsC,uCAK/B,IAAAC,EACyBhB,KAAKS,MAA7BhC,EADDuC,EACCvC,OAAQO,EADTgC,EACShC,YACXiC,EAAiBxC,EAAOyC,OAAO,SAAAC,GACnC,OAAOA,EAAMrD,KAAKsD,cAAcC,SAASrC,EAAYoC,iBAEvD,OAAsB,IAAlB3C,EAAO6C,OACHrD,EAAAC,EAAAC,cAAA,qBAGTF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACoD,EAAD,CAAWtC,aAAce,KAAKI,iBAC9BnC,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAD,CAAUhD,OAAQwC,aA9BNS,oBCElBC,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.2a41b7f5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t  <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t    <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t    <div>\r\n\t      <h2>{name}</h2>\r\n\t      <p>{email}</p>\r\n\t    </div>\r\n\t  </div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t  <div>\r\n   \t    {\r\n   \t\t  robots.map((user, i) => {\r\n   \t\t  \treturn (\r\n   \t\t  \t   <Card  \r\n   \t\t  \t\tkey={i}\r\n   \t\t  \t\tid={robots[i].id}\r\n   \t\t  \t\tname={robots[i].name} \r\n   \t\t  \t\temail={robots[i].email}\r\n   \t\t  \t   />\r\n   \t\t  \t);\r\n   \t\t  })\r\n   \t    }\r\n\t  </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input \r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n    \tplaceholder='search robots' \r\n    \tonChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n  \t<div style={{ overflowY: 'scroll', border: '1px solid black', height: '900px' }}>\r\n  \t  {props.children}\r\n  \t</div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component }from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n  \tsuper()\r\n  \tthis.state = {\r\n  \t  robots: [],\r\n\t  searchfield: ''\r\n  \t}\r\n  }\r\n\r\n  componentDidMount() {\r\n  \tfetch('https://jsonplaceholder.typicode.com/users')\r\n  \t.then(response => response.json())\r\n  \t.then(users => this.setState({ robots: users}));\r\n  }\r\n\r\n  onSearchChange = (event) => this.setState({ searchfield: event.target.value })\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state; // allows to remove this.state before searchfield and robots for the below\r\n  \tconst filteredRobots = robots.filter(robot =>{\r\n  \t  return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n  \t})\r\n  \tif (robots.length === 0) {\r\n  \t\treturn <h1>Loading</h1>\r\n  \t} else {\r\n\t  return (\r\n\t\t<div className='tc'>\r\n\t\t  <h1 className='f1'>RoboFriends</h1>\r\n\t\t  <SearchBox searchChange={this.onSearchChange}/>\r\n\t\t  <Scroll>\r\n\t\t    <CardList robots={filteredRobots} />\r\n\t\t  </Scroll>\r\n\t\t</div>\t\r\n\t  );\r\n\t}\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n//import App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}